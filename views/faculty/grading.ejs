<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/dashboard.css" rel="stylesheet">
</head>
<body class="dashboard-body">
    
    <!-- Top Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary-custom fixed-top">
        <div class="container-fluid">
            <div class="d-flex align-items-center">
                <button class="btn btn-outline-light d-lg-none me-2" type="button" id="sidebarToggle">
                    <i class="bi bi-list"></i>
                </button>
                <a class="navbar-brand d-flex align-items-center" href="/faculty/dashboard">
                    <i class="bi bi-mortarboard me-2 text-white" style="font-size: 1.5rem;"></i>
                    <span class="fw-bold">Lab Exam Portal</span>
                </a>
            </div>
            
            <!-- User Menu -->
            <div class="dropdown">
                <a class="nav-link dropdown-toggle d-flex align-items-center text-white" 
                   href="#" id="userDropdown" role="button" data-bs-toggle="dropdown">
                    <img src="<%= user.profileImage || '/images/default-avatar.png' %>" 
                         alt="Avatar" width="32" height="32" class="rounded-circle me-2" id="navbarAvatar">
                    <span class="d-none d-sm-inline">
                        <%= user.firstName %> <%= user.lastName %>
                    </span>
                </a>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li>
                        <div class="dropdown-header">
                            <strong><%= user.firstName %> <%= user.lastName %></strong><br>
                            <small class="text-muted"><%= user.email %></small><br>
                            <span class="badge bg-success">Faculty</span>
                        </div>
                    </li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" href="/faculty/settings">
                        <i class="bi bi-gear me-2"></i>Settings
                    </a></li>
                    <li><a class="dropdown-item" href="#" onclick="confirmLogout()">
                        <i class="bi bi-box-arrow-right me-2"></i>Logout
                    </a></li>
                </ul>
            </div>
        </div>
    </nav>
    
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h5 class="text-white mb-0">Faculty Portal</h5>
            <small class="text-white-50">Teaching Dashboard</small>
        </div>
        
        <ul class="sidebar-nav">
            <li class="nav-item">
                <a class="nav-link" href="/faculty/dashboard">
                    <i class="bi bi-speedometer2"></i>
                    <span>Dashboard</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/faculty/attendance">
                    <i class="bi bi-clipboard-check"></i>
                    <span>Attendance</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/faculty/grading">
                    <i class="bi bi-journal-text"></i>
                    <span>Grading</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/faculty/results">
                    <i class="bi bi-bar-chart-line"></i>
                    <span>Results & Reports</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/faculty/students">
                    <i class="bi bi-people"></i>
                    <span>Student Management</span>
                </a>
            </li>
        </ul>
    </div>
    
    <!-- Main Content -->
    <div class="main-content">
        <div class="content-wrapper">
            
            <!-- Page Header -->
            <div class="page-header">
                <div class="row align-items-center">
                    <div class="col">
                        <h1 class="page-title">
                            <i class="bi bi-journal-text me-2"></i>
                            Submissions & Grading
                        </h1>
                        <p class="page-subtitle">Manage CIA, ESE, and practical assessments for your students</p>
                    </div>
                    <div class="col-auto">
                        <div class="d-flex gap-2">
                            <% if (selectedClass) { %>
                                <div class="badge bg-info fs-6">
                                    <i class="bi bi-people me-1"></i>
                                    <%= grades.length %> Students
                                </div>
                                <div class="dropdown">
                                    <div class="d-flex gap-2">
                                        <button class="btn btn-success btn-sm" onclick="exportResults('csv')">
                                            <i class="bi bi-download me-1"></i>
                                            Export CSV
                                        </button>
                                    </div>

                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="#" onclick="showBulkGradingModal()">
                                            <i class="bi bi-list-check me-2"></i>Bulk Grade Entry
                                        </a></li>
                                        <li><a class="dropdown-item" href="#" onclick="exportGrades()">
                                            <i class="bi bi-download me-2"></i>Export Grades
                                        </a></li>
                                        <li><a class="dropdown-item" href="#" onclick="calculateAllGrades()">
                                            <i class="bi bi-calculator me-2"></i>Recalculate All
                                        </a></li>
                                    </ul>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Filters and Controls -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card card-custom">
                        <div class="card-body py-3">
                            <form method="GET" id="gradingForm">
                                <div class="row align-items-end">
                                    <div class="col-md-6">
                                        <label class="form-label">Select Class</label>
                                        <select class="form-select" name="classId" onchange="this.form.submit()">
                                            <option value="">Choose a class to grade...</option>
                                            <% classes.forEach(cls => { %>
                                                <option value="<%= cls._id %>" <%= selectedClass && selectedClass._id.equals(cls._id) ? 'selected' : '' %>>
                                                    <%= cls.className %> (<%= cls.classCode %>) - Sem <%= cls.semester %>
                                                </option>
                                            <% }); %>
                                        </select>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="form-label">Filter Status</label>
                                        <select class="form-select" name="status" onchange="this.form.submit()">
                                            <option value="all" <%= selectedStatus === 'all' ? 'selected' : '' %>>All Students</option>
                                            <option value="graded" <%= selectedStatus === 'graded' ? 'selected' : '' %>>Fully Graded</option>
                                            <option value="ungraded" <%= selectedStatus === 'ungraded' ? 'selected' : '' %>>Pending Grades</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3">
                                        <% if (selectedClass) { %>
                                            <button type="button" class="btn btn-success" onclick="autoSaveAll()">
                                                <i class="bi bi-cloud-arrow-up me-2"></i>
                                                Save All Changes
                                            </button>
                                        <% } %>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Grading Content -->
            <% if (selectedClass) { %>
                
                <!-- Class Information -->
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card card-custom">
                            <div class="card-header bg-success bg-opacity-10">
                                <div class="row align-items-center">
                                    <div class="col-md-8">
                                        <h5 class="mb-1 text-success">
                                            <i class="bi bi-book me-2"></i>
                                            <%= selectedClass.className %>
                                        </h5>
                                        <small class="text-muted">
                                            <%= selectedClass.subject %> • <%= selectedClass.classCode %> • Semester <%= selectedClass.semester %> • Year <%= selectedClass.year %>
                                        </small>
                                    </div>
                                    <div class="col-md-4 text-md-end">
                                        <div class="marking-scheme-info">
                                            <small class="text-muted d-block">
                                                <strong>Marking Scheme:</strong>
                                            </small>
                                            <small class="text-muted">
                                                CIA: 40 marks • ESE: 50 marks • Practical: 10 marks
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Student Grades Management -->
                <div class="row">
                    <div class="col-12">
                        <div class="card card-custom">
                            <div class="card-header">
                                <div class="row align-items-center">
                                    <div class="col">
                                        <h5 class="mb-0">
                                            <i class="bi bi-list-check me-2"></i>
                                            Student Grades
                                        </h5>
                                    </div>
                                    <div class="col-auto">
                                        <div class="btn-group btn-group-sm">
                                            <button class="btn btn-outline-primary" onclick="expandAllStudents()">
                                                <i class="bi bi-arrows-expand"></i> Expand All
                                            </button>
                                            <button class="btn btn-outline-secondary" onclick="collapseAllStudents()">
                                                <i class="bi bi-arrows-collapse"></i> Collapse All
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body p-0">
                                
                                <% grades.forEach((grade, index) => { %>
                                    <div class="student-grade-section" id="student-<%= grade.studentId._id %>">
                                        
                                        <!-- Student Header -->
                                        <div class="student-grade-header" onclick="toggleStudentSection('<%= grade.studentId._id %>')">
                                            <div class="row align-items-center">
                                                <div class="col-md-6">
                                                    <div class="d-flex align-items-center">
                                                        <div class="student-avatar me-3">
                                                            <img src="<%= grade.studentId.profileImage || '/images/default-avatar.png' %>" 
                                                                 alt="Avatar" width="50" height="50" class="rounded-circle">
                                                        </div>
                                                        <div>
                                                            <h6 class="mb-1">
                                                                <%= grade.studentId.firstName %> <%= grade.studentId.lastName %>
                                                            </h6>
                                                            <small class="text-muted">
                                                                <%= grade.studentId.email %>
                                                            </small>
                                                        </div>
                                                        <i class="bi bi-chevron-down ms-3 toggle-icon"></i>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="grade-summary">
                                                        <% if (grade.totalMarks !== null) { %>
                                                            <span class="total-score">
                                                                <%= grade.totalMarks %>/100
                                                            </span>
                                                            <% if (grade.letterGrade) { %>
                                                                <span class="grade-badge grade-<%= grade.letterGrade.replace('+', 'plus') %> ms-2">
                                                                    <%= grade.letterGrade %>
                                                                </span>
                                                            <% } %>
                                                        <% } else { %>
                                                            <span class="badge bg-secondary">Not Graded</span>
                                                        <% } %>
                                                    </div>
                                                </div>
                                                <div class="col-md-3 text-end">
                                                    <div class="grade-progress">
                                                        <% 
                                                        const ciaComplete = grade.assessments.CIA1.marks !== null && grade.assessments.CIA2.marks !== null && grade.assessments.CIA3.marks !== null;
                                                        const eseComplete = grade.assessments.MSE.marks !== null && grade.assessments.ESE.marks !== null;
                                                        const practicalComplete = grade.practicalMarks && grade.practicalMarks.length > 0;
                                                        let completionCount = 0;
                                                        if (ciaComplete) completionCount++;
                                                        if (eseComplete) completionCount++;
                                                        if (practicalComplete) completionCount++;
                                                        %>
                                                        <div class="progress-indicators">
                                                            <span class="progress-item <%= ciaComplete ? 'complete' : 'incomplete' %>" title="CIA Assessment">CIA</span>
                                                            <span class="progress-item <%= eseComplete ? 'complete' : 'incomplete' %>" title="ESE Assessment">ESE</span>
                                                            <span class="progress-item <%= practicalComplete ? 'complete' : 'incomplete' %>" title="Practical Assessment">PRAC</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Student Grading Details (Collapsible) -->
                                        <div class="student-grade-details" style="display: none;">
                                            <div class="row">
                                                
                                                <!-- CIA Section -->
                                                <div class="col-lg-4 mb-4">
                                                    <div class="assessment-section cia-section">
                                                        <div class="assessment-header">
                                                            <h6 class="assessment-title">
                                                                <i class="bi bi-clipboard-check me-2"></i>
                                                                CIA Assessment (40 marks)
                                                            </h6>
                                                            <small class="text-muted">
                                                                Raw: CIA1(20) + CIA2(50) + CIA3(20) = 90 → Scaled to 40
                                                            </small>
                                                        </div>
                                                        <div class="assessment-inputs">
                                                            <div class="input-group input-group-sm mb-2">
                                                                <span class="input-group-text">CIA1</span>
                                                                <input type="number" class="form-control cia-input" 
                                                                       data-student-id="<%= grade.studentId._id %>"
                                                                       data-assessment="CIA1"
                                                                       data-max="20"
                                                                       placeholder="0-20" 
                                                                       min="0" max="20" 
                                                                       value="<%= grade.assessments.CIA1.marks || '' %>"
                                                                       onchange="updateAssessment(this)">
                                                                <span class="input-group-text">/20</span>
                                                            </div>
                                                            <div class="input-group input-group-sm mb-2">
                                                                <span class="input-group-text">CIA2</span>
                                                                <input type="number" class="form-control cia-input" 
                                                                       data-student-id="<%= grade.studentId._id %>"
                                                                       data-assessment="CIA2"
                                                                       data-max="50"
                                                                       placeholder="0-50" 
                                                                       min="0" max="50" 
                                                                       value="<%= grade.assessments.CIA2.marks || '' %>"
                                                                       onchange="updateAssessment(this)">
                                                                <span class="input-group-text">/50</span>
                                                            </div>
                                                            <div class="input-group input-group-sm mb-3">
                                                                <span class="input-group-text">CIA3</span>
                                                                <input type="number" class="form-control cia-input" 
                                                                       data-student-id="<%= grade.studentId._id %>"
                                                                       data-assessment="CIA3"
                                                                       data-max="20"
                                                                       placeholder="0-20" 
                                                                       min="0" max="20" 
                                                                       value="<%= grade.assessments.CIA3.marks || '' %>"
                                                                       onchange="updateAssessment(this)">
                                                                <span class="input-group-text">/20</span>
                                                            </div>
                                                            <div class="cia-total">
                                                                <strong>CIA Total: <span id="cia-total-<%= grade.studentId._id %>"><%= grade.ciaTotal || 0 %></span>/40</strong>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <!-- ESE Section -->
                                                <div class="col-lg-4 mb-4">
                                                    <div class="assessment-section ese-section">
                                                        <div class="assessment-header">
                                                            <h6 class="assessment-title">
                                                                <i class="bi bi-file-earmark-text me-2"></i>
                                                                ESE Assessment (50 marks)
                                                            </h6>
                                                            <small class="text-muted">
                                                                Raw: MSE(50) + ESE(50) = 100 → Scaled to 50
                                                            </small>
                                                        </div>
                                                        <div class="assessment-inputs">
                                                            <div class="input-group input-group-sm mb-2">
                                                                <span class="input-group-text">MSE</span>
                                                                <input type="number" class="form-control ese-input" 
                                                                       data-student-id="<%= grade.studentId._id %>"
                                                                       data-assessment="MSE"
                                                                       data-max="50"
                                                                       placeholder="0-50" 
                                                                       min="0" max="50" 
                                                                       value="<%= grade.assessments.MSE.marks || '' %>"
                                                                       onchange="updateAssessment(this)">
                                                                <span class="input-group-text">/50</span>
                                                            </div>
                                                            <div class="input-group input-group-sm mb-3">
                                                                <span class="input-group-text">ESE</span>
                                                                <input type="number" class="form-control ese-input" 
                                                                       data-student-id="<%= grade.studentId._id %>"
                                                                       data-assessment="ESE"
                                                                       data-max="50"
                                                                       placeholder="0-50" 
                                                                       min="0" max="50" 
                                                                       value="<%= grade.assessments.ESE.marks || '' %>"
                                                                       onchange="updateAssessment(this)">
                                                                <span class="input-group-text">/50</span>
                                                            </div>
                                                            <div class="ese-total">
                                                                <strong>ESE Total: <span id="ese-total-<%= grade.studentId._id %>"><%= grade.eseTotal || 0 %></span>/50</strong>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <!-- Practical Section -->
                                                <div class="col-lg-4 mb-4">
                                                    <div class="assessment-section practical-section">
                                                        <div class="assessment-header">
                                                            <h6 class="assessment-title">
                                                                <i class="bi bi-gear me-2"></i>
                                                                Practical Assessment (10 marks)
                                                            </h6>
                                                            <div class="d-flex justify-content-between align-items-center">
                                                                <small class="text-muted">
                                                                    Avg: Observation(5) + Record(5) = 10
                                                                </small>
                                                                <button class="btn btn-sm btn-outline-primary" 
                                                                    onclick="addExperiment('<%= selectedClass._id %>')">
                                                                    <i class="bi bi-plus"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        <div class="practical-experiments" id="practical-<%= grade.studentId._id %>">
                                                            <% if (grade.practicalMarks && grade.practicalMarks.length > 0) { %>
                                                                <% grade.practicalMarks.forEach((practical, practicalIndex) => { %>
                                                                    <div class="experiment-item" data-experiment-id="<%= practical._id %>">
                                                                        <div class="experiment-header">
                                                                            <input type="text" class="form-control form-control-sm experiment-name" 
                                                                                   value="<%= practical.experimentName %>"
                                                                                   placeholder="Experiment name..."
                                                                                   onchange="updateExperimentName('<%= grade.studentId._id %>', '<%= practical._id %>', this.value)">
                                                                            <button class="btn btn-sm btn-outline-danger ms-1" 
                                                                                    onclick="removeExperiment('<%= grade.studentId._id %>', '<%= practical._id %>')">
                                                                                <i class="bi bi-x"></i>
                                                                            </button>
                                                                        </div>
                                                                        <div class="experiment-marks">
                                                                            <div class="row">
                                                                                <div class="col-6">
                                                                                    <div class="input-group input-group-sm">
                                                                                        <span class="input-group-text">Obs</span>
                                                                                        <input type="number" class="form-control practical-input" 
                                                                                               data-student-id="<%= grade.studentId._id %>"
                                                                                               data-experiment-id="<%= practical._id %>"
                                                                                               data-type="observation"
                                                                                               placeholder="0-5" 
                                                                                               min="0" max="5" step="0.5"
                                                                                               value="<%= practical.observation || '' %>"
                                                                                               onchange="updatePractical(this)">
                                                                                    </div>
                                                                                </div>
                                                                                <div class="col-6">
                                                                                    <div class="input-group input-group-sm">
                                                                                        <span class="input-group-text">Rec</span>
                                                                                        <input type="number" class="form-control practical-input" 
                                                                                               data-student-id="<%= grade.studentId._id %>"
                                                                                               data-experiment-id="<%= practical._id %>"
                                                                                               data-type="record"
                                                                                               placeholder="0-5" 
                                                                                               min="0" max="5" step="0.5"
                                                                                               value="<%= practical.record || '' %>"
                                                                                               onchange="updatePractical(this)">
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                <% }); %>
                                                            <% } else { %>
                                                                <div class="no-experiments text-center text-muted py-3">
                                                                    <small>No experiments added yet</small>
                                                                </div>
                                                            <% } %>
                                                        </div>
                                                        <div class="practical-total mt-2">
                                                            <strong>Practical Total: <span id="practical-total-<%= grade.studentId._id %>"><%= grade.practicalTotal || 0 %></span>/10</strong>
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                            </div>
                                            
                                            <!-- Final Grade Summary -->
                                            <div class="row">
                                                <div class="col-12">
                                                    <div class="final-grade-summary">
                                                        <div class="row">
                                                            <div class="col-md-8">
                                                                <div class="grade-breakdown">
                                                                    <span class="breakdown-item">
                                                                        CIA: <span id="display-cia-<%= grade.studentId._id %>"><%= grade.ciaTotal || 0 %></span>/40
                                                                    </span>
                                                                    <span class="breakdown-item">
                                                                        ESE: <span id="display-ese-<%= grade.studentId._id %>"><%= grade.eseTotal || 0 %></span>/50
                                                                    </span>
                                                                    <span class="breakdown-item">
                                                                        Practical: <span id="display-practical-<%= grade.studentId._id %>"><%= grade.practicalTotal || 0 %></span>/10
                                                                    </span>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4 text-end">
                                                                <div class="final-grade">
                                                                    <span class="total-marks">
                                                                        Total: <span id="final-total-<%= grade.studentId._id %>"><%= grade.totalMarks || 0 %></span>/100
                                                                    </span>
                                                                    <span class="percentage">
                                                                        (<span id="final-percentage-<%= grade.studentId._id %>"><%= grade.percentage || 0 %></span>%)
                                                                    </span>
                                                                    <% if (grade.letterGrade) { %>
                                                                        <span class="final-letter-grade grade-<%= grade.letterGrade.replace('+', 'plus') %>" 
                                                                              id="final-letter-<%= grade.studentId._id %>">
                                                                            <%= grade.letterGrade %>
                                                                        </span>
                                                                    <% } else { %>
                                                                        <span class="final-letter-grade" 
                                                                              id="final-letter-<%= grade.studentId._id %>">
                                                                            -
                                                                        </span>
                                                                    <% } %>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row mt-2">
                                                            <div class="col-12">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <div class="grade-actions">
                                                                        <button class="btn btn-sm btn-success" 
                                                                                onclick="saveStudentGrade('<%= grade.studentId._id %>')">
                                                                            <i class="bi bi-save me-1"></i>Save Grade
                                                                        </button>
                                                                        <button class="btn btn-sm btn-outline-info" 
                                                                                onclick="calculateGrade('<%= grade.studentId._id %>')">
                                                                            <i class="bi bi-calculator me-1"></i>Calculate
                                                                        </button>
                                                                    </div>
                                                                    <div class="grade-status">
                                                                        <% if (grade.gradedAt) { %>
                                                                            <small class="text-muted">
                                                                                <i class="bi bi-check-circle text-success me-1"></i>
                                                                                Last updated <%= moment(grade.gradedAt).fromNow() %>
                                                                            </small>
                                                                        <% } else { %>
                                                                            <small class="text-warning">
                                                                                <i class="bi bi-exclamation-triangle me-1"></i>
                                                                                Not saved yet
                                                                            </small>
                                                                        <% } %>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                        </div>
                                        
                                    </div>
                                <% }); %>
                                
                            </div>
                        </div>
                    </div>
                </div>
                
            <% } else { %>
                
                <!-- No Class Selected -->
                <div class="row">
                    <div class="col-12">
                        <div class="card card-custom">
                            <div class="card-body text-center py-5">
                                <i class="bi bi-journal-text text-muted" style="font-size: 4rem;"></i>
                                <h4 class="mt-4 text-muted">Select a Class to Grade</h4>
                                <p class="text-muted mb-4">
                                    Choose a class from the dropdown above to start grading student submissions.
                                </p>
                                <% if (classes.length === 0) { %>
                                    <div class="alert alert-warning">
                                        <i class="bi bi-exclamation-triangle me-2"></i>
                                        You don't have any assigned classes yet. Contact the administrator to assign classes.
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
                
            <% } %>
            
        </div>
    </div>
    
    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/main.js"></script>
    <script src="/js/dashboard.js"></script>
    
    <script>
        // Logout confirmation
        function confirmLogout() {
            if (confirm('Are you sure you want to logout?')) {
                window.location.href = '/auth/logout';
            }
        }
        
        // Sidebar toggle
        document.getElementById('sidebarToggle')?.addEventListener('click', function() {
            document.getElementById('sidebar').classList.toggle('show');
        });
        
        // Toggle student section
        function toggleStudentSection(studentId) {
            const section = document.getElementById(`student-${studentId}`);
            const details = section.querySelector('.student-grade-details');
            const icon = section.querySelector('.toggle-icon');
            
            if (details.style.display === 'none') {
                details.style.display = 'block';
                icon.classList.remove('bi-chevron-down');
                icon.classList.add('bi-chevron-up');
                section.classList.add('expanded');
            } else {
                details.style.display = 'none';
                icon.classList.remove('bi-chevron-up');
                icon.classList.add('bi-chevron-down');
                section.classList.remove('expanded');
            }
        }
        
        // Expand all students
        function expandAllStudents() {
            document.querySelectorAll('.student-grade-details').forEach(details => {
                details.style.display = 'block';
            });
            document.querySelectorAll('.toggle-icon').forEach(icon => {
                icon.classList.remove('bi-chevron-down');
                icon.classList.add('bi-chevron-up');
            });
            document.querySelectorAll('.student-grade-section').forEach(section => {
                section.classList.add('expanded');
            });
        }
        
        // Collapse all students  
        function collapseAllStudents() {
            document.querySelectorAll('.student-grade-details').forEach(details => {
                details.style.display = 'none';
            });
            document.querySelectorAll('.toggle-icon').forEach(icon => {
                icon.classList.remove('bi-chevron-up');
                icon.classList.add('bi-chevron-down');
            });
            document.querySelectorAll('.student-grade-section').forEach(section => {
                section.classList.remove('expanded');
            });
        }
        
        // Update assessment marks
        function updateAssessment(input) {
            const studentId = input.dataset.studentId;
            const assessment = input.dataset.assessment;
            const maxMarks = parseInt(input.dataset.max);
            const marks = parseFloat(input.value) || 0;
            
            // Validate input
            if (marks > maxMarks) {
                input.value = maxMarks;
                showToast(`Maximum marks for ${assessment} is ${maxMarks}`, 'warning');
                return;
            }
            
            // Calculate and update totals
            calculateGrade(studentId);
        }
        
        // Calculate grade for a student
        function calculateGrade(studentId) {
            // Get CIA marks
            const cia1 = parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="CIA1"]`).value) || 0;
            const cia2 = parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="CIA2"]`).value) || 0;
            const cia3 = parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="CIA3"]`).value) || 0;
            
            // Calculate CIA total (scaled to 40)
            const ciaRaw = cia1 + cia2 + cia3; // Max 90
            const ciaTotal = Math.round((ciaRaw / 90) * 40);
            
            // Get ESE marks
            const mse = parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="MSE"]`).value) || 0;
            const ese = parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="ESE"]`).value) || 0;
            
            // Calculate ESE total (scaled to 50)
            const eseRaw = mse + ese; // Max 100
            const eseTotal = Math.round((eseRaw / 100) * 50);
            
            // Calculate practical total
            let practicalTotal = 0;
            const practicalInputs = document.querySelectorAll(`input[data-student-id="${studentId}"].practical-input`);
            const experiments = {};
            
            practicalInputs.forEach(input => {
                const expId = input.dataset.experimentId;
                const type = input.dataset.type;
                const value = parseFloat(input.value) || 0;
                
                if (!experiments[expId]) {
                    experiments[expId] = { observation: 0, record: 0 };
                }
                experiments[expId][type] = value;
            });
            
            // Average practical marks
            const expCount = Object.keys(experiments).length;
            if (expCount > 0) {
                let totalObs = 0, totalRec = 0;
                Object.values(experiments).forEach(exp => {
                    totalObs += exp.observation;
                    totalRec += exp.record;
                });
                practicalTotal = Math.round((totalObs / expCount) + (totalRec / expCount));
            }
            
            // Final total
            const finalTotal = ciaTotal + eseTotal + practicalTotal;
            const percentage = finalTotal; // Already out of 100
            
            // Calculate letter grade
            let letterGrade = '';
            if (percentage >= 90) letterGrade = 'A+';
            else if (percentage >= 80) letterGrade = 'A';
            else if (percentage >= 70) letterGrade = 'B+';
            else if (percentage >= 60) letterGrade = 'B';
            else if (percentage >= 50) letterGrade = 'C+';
            else if (percentage >= 40) letterGrade = 'C';
            else if (percentage >= 35) letterGrade = 'D';
            else letterGrade = 'F';
            
            // Update display
            document.getElementById(`cia-total-${studentId}`).textContent = ciaTotal;
            document.getElementById(`ese-total-${studentId}`).textContent = eseTotal;
            document.getElementById(`practical-total-${studentId}`).textContent = practicalTotal;
            document.getElementById(`display-cia-${studentId}`).textContent = ciaTotal;
            document.getElementById(`display-ese-${studentId}`).textContent = eseTotal;
            document.getElementById(`display-practical-${studentId}`).textContent = practicalTotal;
            document.getElementById(`final-total-${studentId}`).textContent = finalTotal;
            document.getElementById(`final-percentage-${studentId}`).textContent = percentage;
            
            const letterElement = document.getElementById(`final-letter-${studentId}`);
            letterElement.textContent = letterGrade;
            letterElement.className = `final-letter-grade grade-${letterGrade.replace('+', 'plus')}`;
        }
        
        // Add new experiment to ALL students
        async function addExperiment(classId) {
            const experimentName = prompt('Enter experiment name:');
            if (!experimentName) return;
            
            try {
                showToast('Adding experiment to all students...', 'info');
                
                const response = await fetch('/api/faculty/add-experiment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        classId: classId,
                        experimentName: experimentName
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showToast(result.message, 'success');
                    // Refresh page to show new experiments
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    showToast(result.message || 'Failed to add experiment', 'danger');
                }
            } catch (error) {
                showToast('Error adding experiment', 'danger');
                console.error('Add experiment error:', error);
            }
        }

        // Remove experiment from ALL students
        async function removeExperiment(classId, experimentIndex) {
            if (!confirm('Remove this experiment from ALL students? This cannot be undone.')) return;
            
            try {
                showToast('Removing experiment from all students...', 'info');
                
                const response = await fetch('/api/faculty/remove-experiment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        classId: classId,
                        experimentIndex: experimentIndex
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showToast(result.message, 'success');
                    // Refresh page
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    showToast(result.message || 'Failed to remove experiment', 'danger');
                }
            } catch (error) {
                showToast('Error removing experiment', 'danger');
                console.error('Remove experiment error:', error);
            }
        }
        
        // Update practical marks
        function updatePractical(input) {
            const studentId = input.dataset.studentId;
            const marks = parseFloat(input.value) || 0;
            
            if (marks > 5) {
                input.value = 5;
                showToast('Maximum marks for practical is 5', 'warning');
                return;
            }
            
            calculateGrade(studentId);
        }
        
        // Update experiment name
        function updateExperimentName(studentId, experimentId, name) {
            // This would typically save to backend
            console.log(`Updated experiment ${experimentId} name to: ${name}`);
        }
        
        // Save student grade
        async function saveStudentGrade(studentId) {
            // Collect all grade data for the student
            const gradeData = {
                studentId: studentId,
                classId: '<%= selectedClass ? selectedClass._id : "" %>',
                assessments: {
                    CIA1: {
                        marks: parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="CIA1"]`).value) || null,
                        maxMarks: 20
                    },
                    CIA2: {
                        marks: parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="CIA2"]`).value) || null,
                        maxMarks: 50
                    },
                    CIA3: {
                        marks: parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="CIA3"]`).value) || null,
                        maxMarks: 20
                    },
                    MSE: {
                        marks: parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="MSE"]`).value) || null,
                        maxMarks: 50
                    },
                    ESE: {
                        marks: parseFloat(document.querySelector(`input[data-student-id="${studentId}"][data-assessment="ESE"]`).value) || null,
                        maxMarks: 50
                    }
                },
                practicalMarks: []
            };
            
            // Collect practical marks
            const practicalInputs = document.querySelectorAll(`input[data-student-id="${studentId}"].practical-input`);
            const experiments = {};
            
            practicalInputs.forEach(input => {
                const expId = input.dataset.experimentId;
                const type = input.dataset.type;
                const value = parseFloat(input.value) || null;
                
                if (!experiments[expId]) {
                    const nameInput = input.closest('.experiment-item').querySelector('.experiment-name');
                    experiments[expId] = {
                        experimentName: nameInput.value,
                        observation: null,
                        record: null
                    };
                }
                experiments[expId][type] = value;
            });
            
            gradeData.practicalMarks = Object.values(experiments);
            
            try {
                showToast('Saving grade...', 'info');
                
                const response = await fetch('/api/faculty/save-grade', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(gradeData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showToast('Grade saved successfully!', 'success');
                    // Update the last saved timestamp
                    const statusElement = document.querySelector(`#student-${studentId} .grade-status small`);
                    statusElement.innerHTML = '<i class="bi bi-check-circle text-success me-1"></i>Just saved';
                } else {
                    showToast(result.message || 'Failed to save grade', 'danger');
                }
            } catch (error) {
                showToast('Error saving grade', 'danger');
                console.error('Grade save error:', error);
            }
        }
        
        // Auto-save all grades
        async function autoSaveAll() {
            const studentSections = document.querySelectorAll('.student-grade-section');
            let savedCount = 0;
            
            for (const section of studentSections) {
                const studentId = section.id.replace('student-', '');
                try {
                    await saveStudentGrade(studentId);
                    savedCount++;
                } catch (error) {
                    console.error(`Failed to save grade for student ${studentId}`, error);
                }
            }
            
            showToast(`Saved grades for ${savedCount} students`, 'success');
        }
        
        // Calculate all grades
        function calculateAllGrades() {
            document.querySelectorAll('.student-grade-section').forEach(section => {
                const studentId = section.id.replace('student-', '');
                calculateGrade(studentId);
            });
            showToast('Recalculated all grades', 'info');
        }
        
        // Show toast notification
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            toast.style.cssText = `
                top: 80px;
                right: 20px;
                z-index: 9999;
                min-width: 300px;
                box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            `;
            
            const iconMap = {
                success: 'bi-check-circle',
                danger: 'bi-exclamation-triangle',
                warning: 'bi-exclamation-triangle',
                info: 'bi-info-circle'
            };
            
            toast.innerHTML = `
                <i class="bi ${iconMap[type] || 'bi-info-circle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                const bsAlert = new bootstrap.Alert(toast);
                bsAlert.close();
            }, type === 'success' ? 4000 : 3000);
        }
        
        // Initialize calculations on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Calculate all existing grades
            document.querySelectorAll('.student-grade-section').forEach(section => {
                const studentId = section.id.replace('student-', '');
                calculateGrade(studentId);
            });
        });

        // Export results function
        async function exportResults(format) {
            const classId = '<%= selectedClass ? selectedClass._id : "" %>';
            if (!classId) {
                showToast('Please select a class first', 'warning');
                return;
            }
            
            try {
                showToast(`Preparing ${format.toUpperCase()} export...`, 'info');
                
                const response = await fetch(`/api/faculty/export-results/${format}?classId=${classId}`);
                
                if (response.ok) {
                    if (format === 'csv') {
                        // Download CSV
                        const blob = await response.blob();
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = response.headers.get('content-disposition')?.split('filename=')[1] || 'results.csv';
                        a.click();
                        window.URL.revokeObjectURL(url);
                        showToast('CSV exported successfully!', 'success');
                    } else {
                        showToast(`${format.toUpperCase()} export coming soon!`, 'info');
                    }
                } else {
                    const error = await response.json();
                    showToast(error.message || 'Export failed', 'danger');
                }
            } catch (error) {
                showToast('Export failed', 'danger');
                console.error('Export error:', error);
            }
        }
    </script>
    
</body>
</html>
